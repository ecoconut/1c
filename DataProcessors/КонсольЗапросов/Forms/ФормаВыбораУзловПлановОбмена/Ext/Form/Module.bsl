
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ИмяТипа") Тогда
		_ИмяТипа = Параметры.ИмяТипа;
		Если ТипЗнч(_ИмяТипа) = Тип("Строка") Тогда
			_ИмяТипа = ТипЗнч(Вычислить(_ИмяТипа));
		КонецЕсли;
		ОбъектМетаданных = Метаданные.НайтиПоТипу(_ИмяТипа);       
		ЗаполнитьДеревоУзловПлановОбмена(ОбъектМетаданных);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоУзловПлановОбмена(_ОбъектМетаданных)
	
	Если _ОбъектМетаданных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	мПланыОбмена = Метаданные.ПланыОбмена;
	
	Для Каждого планОбмена Из мПланыОбмена Цикл
		
		мУзлы = Новый Массив;
		
		// Проверим, что объект метаданных входит в состав плана обмена
		
		Если НЕ планОбмена.Состав.Содержит(_ОбъектМетаданных) Тогда
			Продолжить;
		КонецЕсли;
		
		МенеджерПланаОбмена = ПланыОбмена[планОбмена.Имя];
				
		ВыборкаПланаОбмена = МенеджерПланаОбмена.Выбрать();
		
		ЭтотУзел = МенеджерПланаОбмена.ЭтотУзел();
		
		Пока ВыборкаПланаОбмена.Следующий() Цикл
			
			Если ВыборкаПланаОбмена.Ссылка = ЭтотУзел Тогда
				Продолжить;
			КонецЕсли;
			
			мУзлы.Добавить(ВыборкаПланаОбмена.Ссылка);
			
		КонецЦикла;
		
		Если мУзлы.Количество() > 0 Тогда
			ДобавитьУзлыПланаОбменаВДерево(планОбмена.Синоним, мУзлы);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьУзлыПланаОбменаВДерево(_ИмяПланаОбмена, _мУзлы)
	
	НоваяСтрока0 = ДеревоУзловПлановОбмена.ПолучитьЭлементы().Добавить();	
	НоваяСтрока0.Узел = _ИмяПланаОбмена;
	
	Для Каждого элем Из _мУзлы Цикл 		
		НоваяСтрока1 = НоваяСтрока0.ПолучитьЭлементы().Добавить();		
		НоваяСтрока1.Узел = элем;  		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
		
	мРезультат = Новый Массив;
	
	Для Каждого стр0 Из ДеревоУзловПлановОбмена.ПолучитьЭлементы() Цикл // обход планов обмена
		
		Для Каждого стр1 Из стр0.ПолучитьЭлементы() Цикл
			
			Если стр1.Пометка Тогда
				мРезультат.Добавить(стр1.Узел);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Закрыть(?(мРезультат.Количество() = 0, Неопределено, мРезультат));
	
КонецПроцедуры


&НаКлиенте
Процедура ДеревоУзловПлановОбменаПометкаПриИзменении(Элемент)
		
	ТекСтроки = Элементы.ДеревоУзловПлановОбмена.ТекущаяСтрока;
	 	
    Если ТекСтроки <> Неопределено Тогда
		 
        ЭлементКоллекции = ЭтаФорма.ДеревоУзловПлановОбмена.НайтиПоИдентификатору(ТекСтроки);

        Если ЭлементКоллекции.Пометка = 2 Тогда
            ЭлементКоллекции.Пометка = 0;
        КонецЕсли;

        УстановкаФлажков(ЭлементКоллекции, ЭлементКоллекции.Пометка);

        Родитель = ЭлементКоллекции.ПолучитьРодителя();
		
		Если Родитель <> Неопределено Тогда
			Родитель.Пометка = ?(УстановленноДляВсех(ЭлементКоллекции),
			ЭлементКоллекции.Пометка, 2);
			ЭлементКоллекции = Родитель;
			Родитель = ЭлементКоллекции.ПолучитьРодителя();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановкаФлажков(ЭлементКоллекции, Пометка)
	
	ПодчинЭлементы = ЭлементКоллекции.ПолучитьЭлементы();
	Для Каждого ТекЭлемент Из ПодчинЭлементы Цикл
		ТекЭлемент.Пометка = Пометка;
		УстановкаФлажков(ТекЭлемент, ТекЭлемент.Пометка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция УстановленноДляВсех(ЭлементКоллекции)
	
	СоседниеЭлементы = ЭлементКоллекции.ПолучитьРодителя().ПолучитьЭлементы();
	Для Каждого ТекЭлемент Из СоседниеЭлементы Цикл
		Если ТекЭлемент.Пометка <> ЭлементКоллекции.Пометка Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
	
КонецФункции


&НаКлиенте
Процедура УстановитьФлажки(Команда)
	ОтметитьВсе(ДеревоУзловПлановОбмена, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	ОтметитьВсе(ДеревоУзловПлановОбмена, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(_Дерево, _Пометка)
	
	СтрокиДерева = _Дерево.ПолучитьЭлементы();
	
	Для Каждого стр Из СтрокиДерева Цикл 		
		стр.Пометка = _Пометка;
		ОтметитьВсе(стр, _Пометка);  		
	КонецЦикла;
	
КонецПроцедуры





