
Перем масВесьЛабиринт;
Перем колОбрывов;



Процедура КнопкаВыполнитьНажатие(Кнопка)
	Попытка 
		масВесьЛабиринт.Количество();
	Исключение
	    Сообщить("Ошибка файла");
	КонецПопытки;
	
	КоличествоПустот = 0;
	колОбрывов = 0;
	
	Для счСтрокЛабиринта  = 0 По масВесьЛабиринт.ВГраница() Цикл  //разделение строк в массиве на массив
		
		стрСтенка = СтрЗаменить(масВесьЛабиринт[счСтрокЛабиринта], " ", "");
		масВесьЛабиринт[счСтрокЛабиринта] = Новый Массив();
		
		Для счСимволыСтенки = 1 По СтрДлина(стрСтенка) Цикл
			стрСимвол = Сред(стрСтенка,счСимволыСтенки, 1);
			
			Если стрСимвол = "#" ИЛИ стрСимвол = "." Тогда
				масВесьЛабиринт.Получить(счСтрокЛабиринта).Добавить(стрСимвол);	
			Иначе
			    Сообщить("Файл содержит некорректные символы!");
			КонецЕсли; 
							
		КонецЦикла;
		
	КонецЦикла;
	
	Пока НайтиСледующуюОставшуюсяПустоту(масВесьЛабиринт, ".") <> Ложь Цикл
		
		Координаты = НайтиСледующуюОставшуюсяПустоту(масВесьЛабиринт, ".");
		ПроверитьОбласть(Координаты.х, Координаты.у);
		
		Если колОбрывов = 0 Тогда
			КоличествоПустот = КоличествоПустот + 1;	
		КонецЕсли;
		
		колОбрывов = 0;
	КонецЦикла;
	
	Сообщить(КоличествоПустот);	
	
КонецПроцедуры

Процедура ПроверитьОбласть(х, у) 
	
	Если масВесьЛабиринт[х][у] = "#" ИЛИ масВесьЛабиринт[х][у] = "х" Тогда
		Возврат;
	КонецЕсли;
	
	масВесьЛабиринт[х][у] = "х";
	
	Попытка			
		ПроверитьОбласть(х, у - 1);	
	Исключение
		колОбрывов = колОбрывов + 1;	
	КонецПопытки;  
	
	Попытка			
		ПроверитьОбласть(х, у + 1);	
	Исключение
		колОбрывов = колОбрывов + 1;	
	КонецПопытки; 
	
	Попытка			
		ПроверитьОбласть(х - 1, у);	
	Исключение
		колОбрывов = колОбрывов + 1;	
	КонецПопытки; 
	
	Попытка			
		ПроверитьОбласть(х + 1, у);	
	Исключение
		колОбрывов = колОбрывов + 1;	
	КонецПопытки; 
	
КонецПроцедуры 

Функция НайтиСледующуюОставшуюсяПустоту(масЛабиринт, стрПустота)
	КоординатыПустоты = Новый Структура("х, у");
	
	Для сч1 = 0 По масЛабиринт.ВГраница() Цикл
		Для сч2 = 0 По масЛабиринт[сч1].ВГраница() Цикл
			Если масЛабиринт[сч1][сч2] = стрПустота Тогда
				КоординатыПустоты.х = сч1;
				КоординатыПустоты.у = сч2;
				Возврат КоординатыПустоты;	
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

Процедура ВыбратьФайлНажатие(Элемент)
	Стр = "";
	
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ВыборФайла.МножественныйВыбор = Ложь;
	ВыборФайла.Заголовок = НСтр("ru = 'Выбор файла'");
	ВыборФайла.Фильтр = НСтр("ru = 'Документ TXT (*.txt*)|*.txt'");
	
	Если ВыборФайла.Выбрать()  Тогда
		ПолноеИмяФайла = ВыборФайла.ПолноеИмяФайла;
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Доступность = Ложь;
		Сообщить("файл не выбран, либо имеет неверный формат");
		Возврат;
	КонецЕсли; 
	
	
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ПолноеИмяФайла); 
	
	масВесьЛабиринт = Новый Массив();
	
	Пока Стр <> Неопределено Цикл // строки читаются до символа перевода строки
		Стр = Текст.ПрочитатьСтроку();
		масВесьЛабиринт.Добавить(Стр);
	КонецЦикла;
	
	Текст.Закрыть();
	
	ЭлементыФормы.ОсновныеДействияФормы.Доступность = Истина;
	ЭтаФорма.ЭлементыФормы.НеВыбран.Значение = "Файл выбран";
	ЭтаФорма.ЭлементыФормы.НеВыбран.ЦветТекста = WebЦвета.Зеленый;
КонецПроцедуры

Процедура ПередОткрытием()
	ЭлементыФормы.ОсновныеДействияФормы.Доступность = Ложь;
КонецПроцедуры

Процедура КакаяТоПроцедура()
	х = 0;	
КонецПроцедуры
